// <auto-generated />
using System;
using BeltPrepDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeltPrepDemo.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200422175212_FirstMigrationAndHopefullyOnly")]
    partial class FirstMigrationAndHopefullyOnly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BeltPrepDemo.Models.FoodTruck", b =>
                {
                    b.Property<int>("FoodTruckId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("FoodTruckId");

                    b.HasIndex("UserId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("BeltPrepDemo.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("FoodTruckId");

                    b.Property<int>("Rating");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("ReviewId");

                    b.HasIndex("FoodTruckId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BeltPrepDemo.Models.Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("StyleId");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("BeltPrepDemo.Models.TruckStyle", b =>
                {
                    b.Property<int>("TruckStyleId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("FoodTruckId");

                    b.Property<int>("StyleId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("TruckStyleId");

                    b.HasIndex("FoodTruckId");

                    b.HasIndex("StyleId");

                    b.ToTable("TruckStyles");
                });

            modelBuilder.Entity("BeltPrepDemo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeltPrepDemo.Models.FoodTruck", b =>
                {
                    b.HasOne("BeltPrepDemo.Models.User", "User")
                        .WithMany("FoodTrucks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeltPrepDemo.Models.Review", b =>
                {
                    b.HasOne("BeltPrepDemo.Models.FoodTruck", "FoodTruck")
                        .WithMany("Reviews")
                        .HasForeignKey("FoodTruckId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeltPrepDemo.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeltPrepDemo.Models.TruckStyle", b =>
                {
                    b.HasOne("BeltPrepDemo.Models.FoodTruck", "FoodTruck")
                        .WithMany("TruckStyles")
                        .HasForeignKey("FoodTruckId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeltPrepDemo.Models.Style", "Style")
                        .WithMany("TruckStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
